{"ast":null,"code":"\n// import Footer from \"../footer/Footer\";\n// import {useState} from \"react\";\n// import * as Yup from \"yup\";\n// //import { Link } from 'react-router-dom'\n// import '../css/pay.css'\n// import axios from 'axios';\n// import { Link } from \"react-router-dom\";\n// //import html2canvas from 'html2canvas';\n// //import jsPDF from 'jspdf';\n\n// const Pay = () => {\n//   const [formData, setFormData] = useState({\n//     paymentID: \"\",\n//     paymentAmount: \"\",\n//     paymentDate:\"\",\n//     pDescription: \"\",\n//     pAddressl:\"\",\n//     pCountry: \"\",\n//   });\n\n//  // const [loader, setLoader] = useState(false);\n\n//   const [errors, setErrors] = useState({});\n\n//   const validationSchema = Yup.object({\n//     paymentID: Yup.string().required(\"First Name is Required\"),\n//     paymentAmount: Yup.number().typeError(\"Amount must be a number\").min(1, \"Amount must be atleast 1\"),\n//      paymentDate: Yup.date().required(\"Payment Date is required\"),\n//   //  paymentDate: Yup.date().min( Date(), \"Payment Date must be in the present or future\").required(\"Payment Date is required\"),\n//     pDescription: Yup.string().required(\"Payment description is required\"),\n//     pAddressl: Yup.string().required(\"Payment address is required\"),\n//     pCountry: Yup.string().required(\"Payment country is required\"),\n//   });\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const nonParsed = {\n//       paymentID: \"PID1254\",\n//       paymentAmount: \"25000\",\n//       paymentDate:\"2024-02-12\",\n//       pDescription: \"Monthly fee\",\n//       pAddressl:\"Colombo\",\n//       pCountry: \"Sri lanka\",\n//      };\n\n//     const parsedUser = validationSchema.cast(nonParsed);\n\n//     console.log(nonParsed, parsedUser);\n\n//     try {\n//         await validationSchema.validate(formData, { abortEarly: false });\n//         const response = await axios.post('/payment/add', formData);\n//         console.log('Form submitted:', response.data);\n//         // Reset errors state\n//         setErrors({});\n//       } catch (error) {\n//         const newErrors = {};\n//         error.inner.forEach((err) => {\n//           newErrors[err.path] = err.message;\n//         });\n//         setErrors(newErrors);\n//       }\n\n//   };\n\n//   const handleChange = (e) => {\n//     const {name, value} = e.target;\n\n//     setFormData({\n//       ...formData,\n//       [name]: value,\n//     });\n//   };\n\n//   return (\n//     <div>\n//     <div className=\"container\">\n//     <form className=\"form\" onSubmit={handleSubmit}>\n//       <div>\n//         <label>paymentID:</label>\n//         <input\n//           type=\"text\"\n//           name=\"paymentID\"\n//           value={formData.paymentID}\n//           placeholder=\"Enter your paymentID\"\n//           onChange={handleChange}\n//         />\n//         {errors.paymentID && <div className=\"error\">{errors.paymentID}</div>}\n//       </div>\n\n//       <div>\n//         <label>paymentAmount:</label>\n//         <input\n//           type=\"Number\"\n//           name=\"paymentAmount\"\n//           value={formData.paymentAmount}\n//           placeholder=\"Enter your payment Amount\"\n//           onChange={handleChange}\n//         />\n//         {errors.paymentAmount && <div className=\"error\">{errors.paymentAmount}</div>}\n//       </div>\n\n//       <div>\n//         <label>paymentDate:</label>\n//         <input\n//           type=\"Date\"\n//           name=\"paymentDate\"\n//           value={formData.paymentDate}\n//           placeholder=\"Enter your paymentDate\"\n//           onChange={handleChange}\n//         />\n//         {errors.paymentDate && <div className=\"error\">{errors.paymentDate}</div>}\n//       </div>\n\n//       <div>\n//         <label> pDescription:</label>\n//         <input\n//           type=\"text\"\n//           name=\"pDescription\"\n//           value={formData.pDescription}\n//           placeholder=\"Enter your Payment Description\"\n//           onChange={handleChange}\n//         />\n//         {errors.pDescription && <div className=\"error\">{errors.pDescription}</div>}\n//       </div>\n\n//       <div>\n//         <label>pAddressl:</label>\n//         <input\n//           type=\"text\"\n//           name=\"pAddressl\"\n//           value={formData.pAddressl}\n//           placeholder=\"Enter your pAddressl \"\n//           onChange={handleChange}\n//         />\n//         {errors.pAddressl && (\n//           <div className=\"error\">{errors.pAddressl}</div>\n//         )}\n//       </div>\n\n//       <div>\n//         <label>pCountry:</label>\n//         <input\n//           type=\"text\"\n//           name=\"pCountry\"\n//           value={formData.pCountry}\n//           placeholder=\"Enter your pCountry\"\n//           onChange={handleChange}\n//         />\n//         {errors.pCountry && <div className=\"error\">{errors.pCountry}</div>}\n//       </div>\n\n//       <button type=\"submit\">Submit</button>\n//     </form>\n\n// <Link to=\"/card\">card</Link>\n\n//     </div>\n//     <Footer />   \n//    </div>\n\n//   );\n// };\n\n// export default Pay;","map":{"version":3,"names":[],"sources":["C:/Users/Karthik/Documents/GitHub/ComfyFitness/frontend/src/pages/Pay.js"],"sourcesContent":["\r\n// import Footer from \"../footer/Footer\";\r\n// import {useState} from \"react\";\r\n// import * as Yup from \"yup\";\r\n// //import { Link } from 'react-router-dom'\r\n// import '../css/pay.css'\r\n// import axios from 'axios';\r\n// import { Link } from \"react-router-dom\";\r\n// //import html2canvas from 'html2canvas';\r\n// //import jsPDF from 'jspdf';\r\n\r\n\r\n// const Pay = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     paymentID: \"\",\r\n//     paymentAmount: \"\",\r\n//     paymentDate:\"\",\r\n//     pDescription: \"\",\r\n//     pAddressl:\"\",\r\n//     pCountry: \"\",\r\n//   });\r\n\r\n\r\n//  // const [loader, setLoader] = useState(false);\r\n\r\n  \r\n  \r\n\r\n\r\n\r\n//   const [errors, setErrors] = useState({});\r\n\r\n//   const validationSchema = Yup.object({\r\n//     paymentID: Yup.string().required(\"First Name is Required\"),\r\n//     paymentAmount: Yup.number().typeError(\"Amount must be a number\").min(1, \"Amount must be atleast 1\"),\r\n//      paymentDate: Yup.date().required(\"Payment Date is required\"),\r\n//   //  paymentDate: Yup.date().min( Date(), \"Payment Date must be in the present or future\").required(\"Payment Date is required\"),\r\n//     pDescription: Yup.string().required(\"Payment description is required\"),\r\n//     pAddressl: Yup.string().required(\"Payment address is required\"),\r\n//     pCountry: Yup.string().required(\"Payment country is required\"),\r\n//   });\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n\r\n\r\n//     const nonParsed = {\r\n//       paymentID: \"PID1254\",\r\n//       paymentAmount: \"25000\",\r\n//       paymentDate:\"2024-02-12\",\r\n//       pDescription: \"Monthly fee\",\r\n//       pAddressl:\"Colombo\",\r\n//       pCountry: \"Sri lanka\",\r\n//      };\r\n\r\n//     const parsedUser = validationSchema.cast(nonParsed);\r\n\r\n//     console.log(nonParsed, parsedUser);\r\n\r\n//     try {\r\n//         await validationSchema.validate(formData, { abortEarly: false });\r\n//         const response = await axios.post('/payment/add', formData);\r\n//         console.log('Form submitted:', response.data);\r\n//         // Reset errors state\r\n//         setErrors({});\r\n//       } catch (error) {\r\n//         const newErrors = {};\r\n//         error.inner.forEach((err) => {\r\n//           newErrors[err.path] = err.message;\r\n//         });\r\n//         setErrors(newErrors);\r\n//       }\r\n      \r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     const {name, value} = e.target;\r\n\r\n//     setFormData({\r\n//       ...formData,\r\n//       [name]: value,\r\n//     });\r\n//   };\r\n\r\n \r\n\r\n//   return (\r\n//     <div>\r\n//     <div className=\"container\">\r\n//     <form className=\"form\" onSubmit={handleSubmit}>\r\n//       <div>\r\n//         <label>paymentID:</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"paymentID\"\r\n//           value={formData.paymentID}\r\n//           placeholder=\"Enter your paymentID\"\r\n//           onChange={handleChange}\r\n//         />\r\n//         {errors.paymentID && <div className=\"error\">{errors.paymentID}</div>}\r\n//       </div>\r\n\r\n//       <div>\r\n//         <label>paymentAmount:</label>\r\n//         <input\r\n//           type=\"Number\"\r\n//           name=\"paymentAmount\"\r\n//           value={formData.paymentAmount}\r\n//           placeholder=\"Enter your payment Amount\"\r\n//           onChange={handleChange}\r\n//         />\r\n//         {errors.paymentAmount && <div className=\"error\">{errors.paymentAmount}</div>}\r\n//       </div>\r\n\r\n//       <div>\r\n//         <label>paymentDate:</label>\r\n//         <input\r\n//           type=\"Date\"\r\n//           name=\"paymentDate\"\r\n//           value={formData.paymentDate}\r\n//           placeholder=\"Enter your paymentDate\"\r\n//           onChange={handleChange}\r\n//         />\r\n//         {errors.paymentDate && <div className=\"error\">{errors.paymentDate}</div>}\r\n//       </div>\r\n\r\n//       <div>\r\n//         <label> pDescription:</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"pDescription\"\r\n//           value={formData.pDescription}\r\n//           placeholder=\"Enter your Payment Description\"\r\n//           onChange={handleChange}\r\n//         />\r\n//         {errors.pDescription && <div className=\"error\">{errors.pDescription}</div>}\r\n//       </div>\r\n\r\n//       <div>\r\n//         <label>pAddressl:</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"pAddressl\"\r\n//           value={formData.pAddressl}\r\n//           placeholder=\"Enter your pAddressl \"\r\n//           onChange={handleChange}\r\n//         />\r\n//         {errors.pAddressl && (\r\n//           <div className=\"error\">{errors.pAddressl}</div>\r\n//         )}\r\n//       </div>\r\n\r\n//       <div>\r\n//         <label>pCountry:</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"pCountry\"\r\n//           value={formData.pCountry}\r\n//           placeholder=\"Enter your pCountry\"\r\n//           onChange={handleChange}\r\n//         />\r\n//         {errors.pCountry && <div className=\"error\">{errors.pCountry}</div>}\r\n//       </div>\r\n\r\n     \r\n        \r\n     \r\n      \r\n//       <button type=\"submit\">Submit</button>\r\n//     </form>\r\n\r\n// <Link to=\"/card\">card</Link>\r\n\r\n//     </div>\r\n//     <Footer />   \r\n//    </div>\r\n  \r\n\r\n//   );\r\n// };\r\n\r\n// export default Pay;\r\n\r\n\r\n\r\n\r\n\r\n    "],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAOA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;;AAEA;;AAEA;AACA;AACA;;AAGA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}